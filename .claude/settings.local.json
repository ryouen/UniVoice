{
  "permissions": {
    "allow": [
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__find_symbol",
      "mcp__serena__write_memory",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__read_memory",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file",
      "Bash(start-clean.bat)",
      "Bash(cmd:*)",
      "Bash(start cmd /k \"npm run dev\")",
      "Bash(powershell:*)",
      "Bash(timeout:*)",
      "mcp__serena__list_memories",
      "Bash(del /f srcstylesUniVoice.css)",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(dir:*)",
      "mcp__serena__replace_symbol_body",
      "Bash(pushd:*)",
      "Bash(popd:*)",
      "Bash(del /Q *.png)",
      "WebFetch(domain:platform.openai.com)",
      "WebFetch(domain:cookbook.openai.com)",
      "WebFetch(domain:developers.deepgram.com)",
      "Bash(test-startup.bat)",
      "Bash(start cmd /c \"npm run electron\")",
      "Bash(start /B npm run dev)",
      "WebFetch(domain:github.com)",
      "Bash(true)",
      "Bash(npx jest:*)",
      "Bash(npx tsc:*)",
      "Bash(set VITE_DEV_SERVER_PORT=5178)",
      "mcp__serena__find_referencing_symbols",
      "Bash(wmic process where name=\"electron.exe\":*)",
      "Bash(start cmd /k \"npm run electron\")",
      "Bash(del test-shadow-metrics.js test-shadow-metrics-trigger.js)",
      "Bash(diff:*)",
      "Bash(test-app-with-diagnostics.bat)",
      "Bash(set DEBUG=univoice:*)",
      "Bash(set LOG_LEVEL=debug)",
      "Bash(copy electronservicesdomainUnifiedPipelineService.ts backupUnifiedPipelineService.ts.backup-20241228-refactor)",
      "Bash(copy electronservicesdomainUnifiedPipelineService.ts backup2025-08-28UnifiedPipelineService.ts.refactor-before)",
      "Bash(del docsSHADOW-MODE-TEST-RESULTS.md)",
      "Bash(pkill:*)",
      "Bash(npx electron:*)",
      "Bash(start /B cmd /c npm run dev)",
      "Bash(npx ts-node:*)",
      "Bash(node test-realtime-display-fix.js)",
      "Bash(start cmd /k npm run dev)",
      "Bash(test:*)",
      "Bash(start /B npm run electron)",
      "Bash(move start-clean.bat start-electron-only.bat start-electron.bat test-clean-startup.bat start-univoice.bat archivescriptsstartup)",
      "Bash(wmic:*)",
      "Bash(xcopy:*)",
      "Bash(where uvx)",
      "Bash(del \"C:\\Users\\ryosu\\Dropbox\\ai\\UniVoice\\docs\\DEEP-THINK-PROTOCOL.md\")",
      "Bash(move:*)",
      "Bash(rimraf:*)",
      "Bash(del \"electron\\services\\domain\\AdvancedFeatureService.cumulative.ts\")",
      "Bash(del test-api-key.js)",
      "mcp__serena__check_onboarding_performed",
      "mcp__github__list_commits",
      "mcp__github__get_file_contents",
      "Bash(for pid in 16872 10440 11704 1404 19488 20928 7840)",
      "Bash(do taskkill //PID $pid //F)",
      "Bash(done)",
      "Bash(start /min cmd /c \"npm run dev\")",
      "Bash(del \"%APPDATA%\\univoice\\SingletonLock\")",
      "mcp__github__search_code",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(mcp__serena__check_onboarding_performed:*)",
      "Bash(npx tsx:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(winget install:*)",
      "Bash(npm install:*)",
      "Bash(where uv)",
      "Bash(npx:*)",
      "Bash(uv:*)",
      "Bash(C:\\Users\\ryosu\\.local\\bin\\uv.exe --version)",
      "Bash(%USERPROFILE%\\.local\\bin\\uv.exe --version)",
      "mcp__github__search_repositories",
      "Bash(C:/Users/ryosu/.local/bin/uvx.exe --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project .)",
      "WebSearch",
      "Bash(where:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run build:*)",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run electron:*)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=8192)",
      "Bash(git diff:*)",
      "Bash(xargs:*)",
      "Bash(sort:*)",
      "Bash(npm test:*)",
      "Bash(npm run clean:*)",
      "Bash(start cmd /c \"npm run dev\")",
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:0110.be)",
      "Bash(claude code /doctor)",
      "mcp__github__create_or_update_file",
      "Bash(start test-css-unification.html)",
      "Bash(explorer test-css-unification.html)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "serena"
  ],
  "disabledMcpjsonServers": []
}